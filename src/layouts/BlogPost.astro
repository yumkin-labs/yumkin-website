---
import type { CollectionEntry } from "astro:content";
import { Image } from "astro:assets";
import BaseHead from "../components/BaseHead.astro";
import Footer from "../components/Footer.astro";
import FormattedDate from "../components/FormattedDate.astro";
import HeaderDetail from "../components/HeaderDetail.astro";
import SimilarPosts from "../components/SimilarPosts.astro";

type Props = CollectionEntry<"blog">["data"];

const { title, description, pubDate, updatedDate, heroImage, tags } =
  Astro.props;
---

<html lang="en">
  <head>
    <BaseHead title={title} description={description} />
  </head>

  <body>
    <HeaderDetail />
    <main>
      <article class="">
        <div class="hero-image mb-8 p-6">
          {
            heroImage && (
              <Image
                class="rounded-xl w-full max-h-[50vh] object-cover"
                src={`${import.meta.env.BASE_URL}${heroImage}`}
                alt=""
                width={1020}
                height={510}
                class="rounded-lg"
              />
            )
          }
        </div>
        <div class="mx-auto max-w-lg md:max-w-3xl lg:max-w-5xl px-6 prose">
          <div
            class="flex flex-col gap-4 pb-8 pt-4 font-medium text-sm items-start"
          >
            {
              tags && (
                <div class="flex flex-wrap gap-1">
                  {tags?.map((tag) => (
                    <span class="py-1 px-2 text-xs font-semibold text-gray-600 rounded-full bg-gray-100">
                      {tag}
                    </span>
                  ))}
                </div>
              )
            }
            <div class="date">
              Ver√∂ffentlicht am <FormattedDate date={pubDate} />
            </div>
          </div>
          <div class="title">
            <h1>{title}</h1>
          </div>
          <slot />
        </div>
      </article>
      <!-- Similar Posts -->
      <SimilarPosts currentPost={{ title, tags }} />
    </main>
    <Footer />
  </body>
</html>
