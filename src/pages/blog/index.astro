---
import BaseHead from "../../components/BaseHead.astro";
import Footer from "../../components/Footer.astro";
import { SITE_TITLE, SITE_DESCRIPTION } from "../../consts";
import { getCollection } from "astro:content";
import BlogTeaser from "../../components/BlogTeaser.astro";
import HeaderDetail from "../../components/HeaderDetail.astro";

const posts = (await getCollection("blog")).sort(
  (a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf()
);

const postsByCategory = posts.reduce<Record<string, BlogPost[]>>(
  (acc, post) => {
    const category = post.data.category; // Assume every post has a valid category
    if (!acc[category]) {
      acc[category] = [];
    }
    acc[category].push(post);
    return acc;
  },
  {}
);

console.log(postsByCategory);
---

<!doctype html>
<html lang="en">
  <head>
    <BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
  </head>
  <body>
    <HeaderDetail
      title="Wissenswertes"
      description="Immer up to date: Wissen, Tipps und Tricks! Entdecke Wissenswertes, Updates und Inspirationen rund um ErnÃ¤hrung und unsere App."
    />
    <main>
      <section class="max-w-7xl mx-auto px-6">
        <div class="categories-container">
          {
            Object.entries(postsByCategory).map(([category, posts]) => (
              <div
                id={category}
                class="category-group bg-gray-50 p-4 rounded-lg mb-4"
              >
                <h2 class="category-title text-xl font-semibold text-gray-900 mb-8">
                  {category}
                </h2>
                <div class="grid sm:grid-cols-2 md:grid-cols-2 lg:grid-cols-3 gap-4 text-left">
                  {posts.map((post: BlogPost) => (
                    <BlogTeaser key={post.data.title} post={post} />
                  ))}
                </div>
              </div>
            ))
          }
        </div>
      </section>
    </main>
    <Footer />
  </body>
</html>
