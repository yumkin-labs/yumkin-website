---
import FormattedDate from "../helper/FormattedDate.astro";
import { getImage, Image } from "astro:assets";

// Resolve the image for this post
const { post } = Astro.props;
// Dynamically create the image path assuming the image is in the 'public/uploads/' directory
const heroImagePath = `/${post.data.heroImage}`;
// Now pass it to getImage
const heroImage = await getImage({
  src: heroImagePath,
  width: 1000,
  height: 800,
  format: "webp",
});
---

<article
  class="relative isolate flex flex-col justify-end overflow-hidden rounded-2xl bg-gray-900 p-6 md:p-8 aspect-[5/4] md:aspect-[4/5] group"
>
  {
    heroImage && (
      <Image
        class="absolute inset-0 -z-10 size-full object-cover group-hover:scale-105 group-hover:blur-sm transition-transform"
        src={heroImage.src}
        alt={post.data.title || ""}
        width="1920"
        height="1080"
      />
    )
  }
  <div
    class="absolute inset-0 -z-10 bg-gradient-to-t from-gray-900 via-gray-900/40"
  >
  </div>
  <div
    class="absolute inset-0 -z-10 rounded-2xl ring-1 ring-inset ring-gray-900/10"
  >
  </div>

  <div
    class="flex flex-col items-start gap-y-1 overflow-hidden text-sm/6 text-gray-300"
  >
    <time datetime={post.data.pubDate}>
      <FormattedDate date={post.data.pubDate} />
    </time>
  </div>
  <h3 class="mt-3 text-lg/6 font-semibold text-white">
    <a href={`blog/${post.slug}`}>
      <span class="absolute inset-0"></span>
      {post.data.title}
    </a>
  </h3>
  {
    post.data.tags && (
      <div class="flex flex-wrap gap-1 mt-4">
        {post.data.tags.map((tag) => (
          <span class="py-1 px-2 text-xs text-white font-semibold rounded-full bg-white/15">
            {tag}
          </span>
        ))}
      </div>
    )
  }
</article>
