---
import { getCollection } from "astro:content";
import BlogTeaser from "./BlogTeaser.astro";

// Props: `currentPost` contains the tags of the current post
export const prerender = true;
const { currentPost } = Astro.props;

// Get all posts from the blog collection
const allPosts = await getCollection("blog");

// Function to calculate tag similarity score
function getSimilarityScore(postTags: any, otherTags: any) {
  if (!postTags || !otherTags) return 0;
  return postTags.filter((tag: any) => otherTags.includes(tag)).length;
}

// Filter and rank posts by similarity
const similarPosts = allPosts
  // .filter((post) => post.id !== currentPost.id) // Exclude the current post
  .filter((post) => post.data.title !== currentPost.title)
  // .filter((post) => post.slug !== currentPost.slug)
  .map((post) => ({
    ...post,
    similarityScore: getSimilarityScore(currentPost.tags, post.data.tags),
  }))
  .filter((post) => post.similarityScore > 0) // Exclude posts with no shared tags
  .sort((a, b) => b.similarityScore - a.similarityScore) // Sort by similarity
  .slice(0, 3); // Get top 3 similar posts
---

<section class="mx-auto max-w-lg md:max-w-3xl lg:max-w-5xl px-6 mt-32">
  <h2 class="text-lg/8 font-semibold text-gray-900 mb-8">
    Das k√∂nnte dich auch interessieren
  </h2>
  {
    similarPosts.length > 0 ? (
      <div class="grid sm:grid-cols-2 md:grid-cols-2 lg:grid-cols-3 gap-4 text-left">
        {similarPosts.map((post) => (
          <BlogTeaser post={post} />
        ))}
      </div>
    ) : (
      <p>No similar posts found.</p>
    )
  }
</section>
